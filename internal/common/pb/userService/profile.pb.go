// Code generated by Kitex v0.15.1. DO NOT EDIT.

package userService

import (
	"context"

	"github.com/cloudwego/prutal"
)

type FindUserProfileRequest struct {
	Id *uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (x *FindUserProfileRequest) Reset() { *x = FindUserProfileRequest{} }

func (x *FindUserProfileRequest) Marshal(in []byte) ([]byte, error) {
	return prutal.MarshalAppend(in, x)
}

func (x *FindUserProfileRequest) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *FindUserProfileRequest) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

type FindUserProfileResponse struct {
	Id          uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	UserName    string `protobuf:"bytes,3,opt,name=userName" json:"userName,omitempty"`
	CountryCode string `protobuf:"bytes,4,opt,name=countryCode" json:"countryCode,omitempty"`
	Phone       string `protobuf:"bytes,5,opt,name=phone" json:"phone,omitempty"`
	Email       string `protobuf:"bytes,6,opt,name=email" json:"email,omitempty"`
	IsAdmin     bool   `protobuf:"varint,7,opt,name=isAdmin" json:"isAdmin,omitempty"`
}

func (x *FindUserProfileResponse) Reset() { *x = FindUserProfileResponse{} }

func (x *FindUserProfileResponse) Marshal(in []byte) ([]byte, error) {
	return prutal.MarshalAppend(in, x)
}

func (x *FindUserProfileResponse) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *FindUserProfileResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FindUserProfileResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FindUserProfileResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *FindUserProfileResponse) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *FindUserProfileResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *FindUserProfileResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *FindUserProfileResponse) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

type Profile interface {
	FindUserProfile(ctx context.Context, req *FindUserProfileRequest) (res *FindUserProfileResponse, err error)
}
