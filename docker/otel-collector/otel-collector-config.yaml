receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

processors:
  batch:
  resource:
    attributes:
    - key: service.instance.id
      from_attribute: service.instance.id
      action: upsert
    - key: instance
      from_attribute: service.instance.id
      action: upsert

exporters:
  # metric
  prometheus:
    endpoint: 0.0.0.0:8889
    namespace: default
  prometheusremotewrite:
    endpoint: "http://prometheus:9090/api/v1/write"
    max_batch_request_parallelism: 5 # 控制并发请求数
    remote_write_queue:
      enabled: true
      queue_size: 10000
    tls:
      insecure: true
    resource_to_telemetry_conversion:
      enabled: true
  # trace
  otlp/tempo:
    endpoint: "tempo:3200"
    tls:
      insecure: true
  # logs
  otlphttp/loki:
    endpoint: "http://loki:3100/otlp"
    tls:
      insecure: true

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
  pprof:
    endpoint: 0.0.0.0:1777
  zpages:
    endpoint: 0.0.0.0:55679

service:
  # telemetry:
  #   metrics:
  #     address: 0.0.0.0:8888 # ← 这个端口
  #     level: detailed
  extensions: [ health_check, pprof, zpages ]
  pipelines:
    traces:
      receivers: [ otlp ]
      processors: [ batch ]
      exporters: [ otlp/tempo ]
    metrics:
      receivers: [ otlp ]
      processors: [ resource, batch ]
      exporters: [ prometheusremotewrite, prometheus ]

#     logs:
#       receivers: [otlp]
#       processors: [batch]
#       exporters: [otlp]
